@model PublicacaoModel

@{
    ViewData["Title"] = "Edit";

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Begin Page Content -->
<div class="container-fluid">
    <!-- Logout Modal-->
    <!-- Page Heading -->
    <div class="alert alert-danger alert-dismissible" style="display: none;"></div>
    <div id="alertSuccess" class="alert alert-success alert-dismissible" style="display: none;"></div>
    <div class="alert alert-warning alert-dismissible" style="display: none;"></div>
    <div class="text-center" style="display: none;"></div>

    @using (Html.BeginForm("Edit", "Publicacao", FormMethod.Post, new { @class = "user", @enctype = "multipart/form-data" }))
    {
        @if (ViewBag.ErrorMessage != null)
        {
            <div class="alert alert-danger alert-dismissible">
                @* <a href="#" class="close" data-dismiss="alert" aria-label="close">×</a> *@

                <i class="icon fa fa-ban"></i>
                <strong>Erro</strong>

                @Html.Raw(@ViewBag.ErrorMessage)
            </div>
        }
        else if (ViewBag.SuccessMessage != null)
        {
            <div id="alertSuccess" class="alert alert-success alert-dismissible">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>

                <h4>
                    <i class="icon fa fa-check"></i>
                    <strong>Sucesso</strong>
                </h4>

                @Html.Raw(@ViewBag.SuccessMessage)

                <p>
                    <small class="text-success">
                        Se o redirecionamento não funcionar, clique <a href="@Url.Action("Index", "Publicacao")" class="text-success"><strong>aqui</strong></a>.
                    </small>
                </p>
            </div>
        }
        else if (ViewBag.ValidateMessage != null)
        {
            <div class="alert alert-warning alert-dismissible">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>

                <i class="icon fa fa-exclamation"></i>
                <strong>Validação</strong>

                @Html.Raw(@ViewBag.ValidateMessage)
            </div>
        }

        <div class="row d-sm-flex align-items-center justify-content-between mb-4">
            <div class="col-sm-8 col-6">
                <h1 class="h3 mb-0 text-gray-800">Sobre Nós</h1>
            </div>
            <div class="col-sm-4 col-6 text-right">
                <a class="btn btn-secondary btn-icon-split pull-right" asp-action="Index">
                    <span class="icon text-white-50">
                        <i class="fas fa-arrow-left"></i>
                    </span>
                    <span class="text">Voltar</span>
                </a>

                <button id="btnSalvar" type="submit" class="btn btn-primary btn-icon-split">
                    <span class="icon text-white">
                        <i class="fas fa-save"></i>
                    </span>
                    <span class="text">Salvar</span>
                </button>
            </div>
        </div>

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        @Html.AntiForgeryToken()

        <div class="row">
            @Html.HiddenFor(model => model.Id, new { @id = "hdnId" })
            @Html.HiddenFor(model => model.ConteudoImagem, new { @id = "hdnConteudoImagem" })
            @Html.HiddenFor(model => model.NomeImagem, new { @id = "hdnImagem" })

            <div class="col-xl-2 col-sm-2 col-md-2">
                <div class="form-group">
                    <label class="control-label" for="txtDataApresentacao">
                        @Html.DisplayNameFor(model => model.DataApresentacao)
                    </label>

                    @Html.TextBoxFor(Model => Model.DataApresentacao, "{0:dd/MM/yyyy}", new { @class = "form-control", @id = "txtDataApresentacao", @maxlength = "10", @placeholder = "XX/XX/XXXX" })
                </div>
            </div>

            <div class="col-xl-2 col-sm-2 col-md-2">
                <div class="form-group">
                    <label class="control-label" for="txtDataValidade">
                        @Html.DisplayNameFor(model => model.DataValidade)
                    </label>

                    @Html.TextBoxFor(Model => Model.DataValidade, "{0:dd/MM/yyyy}", new { @class = "form-control", @id = "txtDataValidade", @maxlength = "10", @placeholder = "XX/XX/XXXX" })
                </div>
            </div>

            <div class="col-xl-6 col-sm-5 col-md-5">
                <div class="form-group">
                    <label class="control-label" for="txtTitulo">
                        @Html.DisplayNameFor(model => model.Titulo)
                    </label>

                    @Html.TextBoxFor(Model => Model.Titulo, new { @class = "form-control", @id = "txtTitulo", @maxlength = "150", @type = "text" })
                </div>
            </div>

            <div class="col-xl-2 col-sm-2 col-md-2">

                <div class="form-group">
                    <label class="control-label" for="chkOcultarPublicacao">
                        @Html.DisplayNameFor(model => model.OcultarPublicacao)
                    </label>

                    @Html.CheckBoxFor(model => model.OcultarPublicacao, new { @class = "form-control", @id = "chkOcultarPublicacao", @type = "checkbox" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-xl-12 col-sm-12 col-md-12">
                <div class="form-group">
                    <label class="control-label" for="txtResumo">
                        @Html.DisplayNameFor(model => model.Resumo)
                    </label>

                    @Html.TextAreaFor(Model => Model.Resumo, new { @class = "form-control", @id = "txtResumo", @style = "resize: none", @cols = 5, @rows = 5 })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-xl-12 col-sm-12 col-md-12">
                <div class="form-group">
                    <label class="control-label" for="txtTexto">
                        @Html.DisplayNameFor(model => model.Texto)
                    </label>

                    @Html.TextAreaFor(Model => Model.Texto, new { @class = "form-control", @id = "txtTexto", @style = "resize: none", @cols = 10, @rows = 5 })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-xl-6 col-sm-6 col-md-6">
                <div class="form-group">

                    <label class="control-label" for="fupImagem">
                        @Html.DisplayNameFor(model => model.NomeImagem)
                    </label>

                    <div class="input-group">
                        @Html.TextBox("images", "NomeImagem", new { @class = "form-control", @name = "NomeImagem", @id = "fupImagem", @type = "file" })

                        @*                         <button type="submit" class="btn btn-warning btn-icon-split">
                    <span class="icon text-white">
                    <i class="fas fa-upload"></i>
                    </span>
                    <span class="text">Upload</span>
                    </button> *@

                        <button type="button" id="btnLimparImagem" class="btn btn-danger btn-icon-split">
                            <span class="icon text-white">
                                <i class="fas fa-times"></i>
                            </span>
                            <span class="text">Limpar</span>
                        </button>
                    </div>
                </div>
            </div>

            <div class="col-xl-6 col-sm-6 col-md-6">
                <div class="form-group">
                    <label class="control-label" for="fupArquivo">
                        @Html.DisplayNameFor(model => model.NomeArquivo)
                    </label>

                    <div class="input-group">
                        @Html.TextBox("files", "", new { @class = "form-control", @id = "fupArquivo", @type = "file" })

                        <button type="submit" class="btn btn-warning btn-icon-split">
                            <span class="icon text-white">
                                <i class="fas fa-upload"></i>
                            </span>
                            <span class="text">Upload</span>
                        </button>

                        <button type="button" id="btnLimparArquivo" class="btn btn-danger btn-icon-split">
                            <span class="icon text-white">
                                <i class="fas fa-times"></i>
                            </span>
                            <span class="text">Limpar</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }

    @*     <div class="row">
    <div class="col-xl-12 col-sm-12 col-md-12">
    @using (Html.BeginForm("SendFile", "Publicacao", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
    <div class="form-group">
    <label class="control-label" for="fupImagem">
    @Html.DisplayNameFor(model => model.NomeImagem)
    </label>

    <div class="input-group">
    @Html.TextBox("files", "", new { @class = "form-control", @name = "NomeImagem", @id = "fupImagem", @type = "file" })

    <button type="submit" class="btn btn-warning btn-icon-split">
    <span class="icon text-white">
    <i class="fas fa-upload"></i>
    </span>
    <span class="text">Upload</span>
    </button>

    <button type="button" id="btnLimparImagem" class="btn btn-danger btn-icon-split">
    <span class="icon text-white">
    <i class="fas fa-times"></i>
    </span>
    <span class="text">Limpar</span>
    </button>
    </div>
    </div>
    }
    </div>
    </div> *@
</div>

@*https://igorescobar.github.io/jQuery-Mask-Plugin/docs.html*@
@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('#txtDataApresentacao').mask('00/00/0000');
            $('#txtDataValidade').mask('00/00/0000');

            //  Controle para redirecionar a página se o ViewBag de Mensagem de Sucesso estiver preenchido.
            var msg = '@ViewBag.SuccessMessage';

            if (msg !== '') {
                setTimeout(function () {
                    window.location.replace(
                        '@Url.Action(
                            "Index",
                "Publicacao")')
                                                                                                                                                                                                                                                }, 4000);
            }
        });

        $(document).on('click', '#btnLimparArquivo', function () {
            // $("#imgMarca").empty();
            // //$("#imgMarca").data("ConteudoImagem", '');
            // $('#imgMarca').attr("src", '../Content/img/logo-white.png');

            $("#fupArquivo").val('');
        });

        $(document).on('click', '#btnLimparImagem', function () {
            // $("#imgMarca").empty();
            // //$("#imgMarca").data("ConteudoImagem", '');
            // $('#imgMarca').attr("src", '../Content/img/logo-white.png');

            $("#fupImagem").val('');
            $("#hdnConteudoImagem").val('');
            $("#hdnImagem").val('');
        });

        $(document).on('change', '#fupArquivo', function () {
            //Get count of selected files
            var countFiles = $(this)[0].files.length;

            var filePath = $(this)[0].value;
            var extension = filePath.substring(filePath.lastIndexOf('.') + 1).toLowerCase();

            // var imgMarca = $("#imgMarca");
            // imgMarca.empty();

            if (extension == "pdf" || extension == "rtf") {
                if (typeof (FileReader) != "undefined") {
                    //loop for each file selected for uploaded.
                    for (var i = 0; i < countFiles; i++) {

                        var reader = new FileReader();
                        reader.onload = function (e) {
                            //$("<img />", {
                            //    "src": e.target.result,
                            //    "class": "thumb-image"
                            //}).appendTo(image_holder);

                            //$('#imgMarca').attr('src', e.target.result);
                        }

                        //imgMarca.show();

                        reader.readAsDataURL($(this)[0].files[i]);
                    }

                } else {
                    alert("This browser does not support FileReader.");
                }
            } else {
                alert("Selecione apenas arquivos Pdf ou Rtf.");
            }
        });

        $(document).on('change', '#fupImagem', function () {

            //Get count of selected files
            var countFiles = $(this)[0].files.length;

            var filePath = $(this)[0].value;
            var extension = filePath.substring(filePath.lastIndexOf('.') + 1).toLowerCase();

            // var imgMarca = $("#imgMarca");
            // imgMarca.empty();

            if (extension == "bmp" ||
                extension == "jpeg" ||
                extension == "jpg" ||
                extension == "png" ||
                extension == "svg") {
                if (typeof (FileReader) != "undefined") {
                    //loop for each file selected for uploaded.
                    for (var i = 0; i < countFiles; i++) {

                        var reader = new FileReader();
                        reader.onload = function (e) {
                            //$("<img />", {
                            //    "src": e.target.result,
                            //    "class": "thumb-image"
                            //}).appendTo(image_holder);

                            //$('#imgMarca').attr('src', e.target.result);
                        }

                        //  imgMarca.show();

                        var path = $(this)[0].files[i];

                        $('#hdnImagem').val(
                            path.name);

                        reader.readAsDataURL($(this)[0].files[i]);
                    }
                } else {
                    alert("This browser does not support FileReader.");
                }
            } else {
                alert("Selecione apenas arquivos Bmp, Jpeg, Jpg, Png ou Svg.");
            }
        });
    </script>
}