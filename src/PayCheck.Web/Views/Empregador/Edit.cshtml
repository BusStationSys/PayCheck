@using ARVTech.DataAccess.Enums
@using System.ComponentModel.DataAnnotations
@using System.Reflection
@model PessoaJuridicaModel

@{
    ViewData["Title"] = "Edit";

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Begin Page Content -->
<div class="container-fluid">
    <!-- Logout Modal-->
    <!-- Page Heading -->
    <div class="alert alert-danger alert-dismissible" style="display: none;"></div>
    <div id="alertSuccess" class="alert alert-success alert-dismissible" style="display: none;"></div>
    <div class="alert alert-warning alert-dismissible" style="display: none;"></div>
    <div class="text-center" style="display: none;"></div>

    @using (Html.BeginForm("Edit", "Empregador", FormMethod.Post, new { @class = "user" }))
    {
        var bandeirasComerciais = Enum.GetValues(typeof(UnidadeNegocioEnum)).OfType<UnidadeNegocioEnum>().Select(m => new { Text = m.ToString(), Value = (int)m }).ToList();

        @if (ViewBag.ErrorMessage != null)
        {
            <div class="alert alert-danger alert-dismissible">
                @* <a href="#" class="close" data-dismiss="alert" aria-label="close">×</a> *@

                <i class="icon fa fa-ban"></i>
                <strong>Erro</strong>

                @Html.Raw(@ViewBag.ErrorMessage)
            </div>
        }
        else if (ViewBag.SuccessMessage != null)
        {
            <div id="alertSuccess" class="alert alert-success alert-dismissible">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>

                <h4>
                    <i class="icon fa fa-check"></i>
                    <strong>Sucesso</strong>
                </h4>

                @Html.Raw(@ViewBag.SuccessMessage)

                <p>
                    <small class="text-success">
                        Se o redirecionamento não funcionar, clique <a href="@Url.Action("Index", "Empregador")" class="text-success"><strong>aqui</strong></a>.
                    </small>
                </p>
            </div>
        }
        else if (ViewBag.ValidateMessage != null)
        {
            <div class="alert alert-warning alert-dismissible">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>

                <i class="icon fa fa-exclamation"></i>
                <strong>Validação</strong>

                @Html.Raw(@ViewBag.ValidateMessage)
            </div>
        }

        <div class="row d-sm-flex align-items-center justify-content-between mb-4">
            <div class="col-sm-8 col-6">
                <h1 class="h3 mb-0 text-gray-800">Empregador</h1>
            </div>
            <div class="col-sm-4 col-6 text-right">
                <a class="btn btn-secondary btn-icon-split pull-right" asp-action="Index">
                    <span class="icon text-white-50">
                        <i class="fas fa-arrow-left"></i>
                    </span>
                    <span class="text">Voltar</span>
                </a>

                <button id="btnSalvar" type="submit" class="btn btn-primary btn-icon-split">
                    <span class="icon text-white">
                        <i class="fas fa-save"></i>
                    </span>
                    <span class="text">Salvar</span>
                </button>
            </div>
        </div>

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        @Html.AntiForgeryToken()

        <div class="row">
            @Html.HiddenFor(model => model.Guid)
            @Html.HiddenFor(model => model.GuidPessoa)

            <div class="col-xl-3 col-sm-3 col-md-2">
                <div class="form-group">
                    <label class="control-label" for="txtCnpj">
                        @Html.DisplayNameFor(model => model.Cnpj)
                    </label>

                    @Html.TextBoxFor(Model => Model.Cnpj, "", new { @class = "form-control", @id = "txtCnpj", @maxlength = "18", @placeholder = "XX.XXX.XXX/XXXX-XX" })
                </div>
            </div>

            <div class="col-xl-2 col-sm-2 col-md-2">
                <div class="form-group">
                    <label class="control-label" for="ddlUnidadeNegocio">
                        @Html.DisplayNameFor(model => model.IdUnidadeNegocio)
                    </label>

                    @Html.DropDownListFor(model => model.IdUnidadeNegocio, new SelectList(Enum.GetValues(typeof(UnidadeNegocioEnum)).Cast<UnidadeNegocioEnum>()
                             .Select(g => new SelectListItem
                {
                    Text = g.GetType().GetMember(g.ToString()).First().GetCustomAttribute<DisplayAttribute>().GetName(),
                    Value = g.ToString()
                }),
                             "Value",
                             "Text"), new { @id = "ddlUnidadeNegocio", @class = "form-control" })
                </div>
            </div>

            <div class="col-xl-5 col-sm-4 col-md-5">
                <div class="form-group">
                    <label class="control-label" for="txtRazaoSocial">
                        @Html.DisplayNameFor(model => model.RazaoSocial)
                    </label>

                    @Html.TextBoxFor(Model => Model.RazaoSocial, new { @class = "form-control", @id = "txtRazaoSocial", @maxlength = "100", @type = "text" })
                </div>
            </div>

            <div class="col-xl-2 col-sm-3 col-md-2">
                <div class="form-group">
                    <label class="control-label" for="txtDataFundacao">
                        @Html.DisplayNameFor(model => model.DataFundacao)
                    </label>

                    @Html.TextBoxFor(Model => Model.DataFundacao, "{0:dd/MM/yyyy}", new { @class = "form-control", @id = "txtDataFundacao", @maxlength = "10", @placeholder = "XX/XX/XXXX" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-2">
                <div class="form-group">
                    <label class="control-label" for="txtCep">
                        @Html.DisplayNameFor(model => model.Cep)
                    </label>

                    @Html.TextBoxFor(Model => Model.Cep, "", new { @class = "form-control", @id = "txtCep", @maxlength = "9", @type = "text" })
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    <label class="control-label" for="txtEndereco">
                        @Html.DisplayNameFor(model => model.Endereco)
                    </label>
                    @Html.TextBoxFor(Model => Model.Endereco, "", new { @class = "form-control", @id = "txtEndereco", @maxlenght = "100", @type = "text" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label class="control-label" for="txtNumero">
                        @Html.DisplayNameFor(model => model.Numero)
                    </label>
                    @Html.TextBoxFor(Model => Model.Numero, "", new { @class = "form-control", @id = "txtNumero", @maxlenght = "10", @type = "text" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label class="control-label" for="txtComplemento">
                        @Html.DisplayNameFor(model => model.Complemento)
                    </label>
                    @Html.TextBoxFor(Model => Model.Complemento, "", new { @class = "form-control", @id = "txtComplemento", @maxlenght = "30", @type = "text" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    <label class="control-label" for="txtBairro">
                        @Html.DisplayNameFor(model => model.Bairro)
                    </label>
                    @Html.TextBoxFor(Model => Model.Bairro, "", new { @class = "form-control", @id = "txtBairro", @maxlenght = "40", @type = "text" })
                </div>
            </div>

            <div class="col-md-5">
                <div class="form-group">
                    <label class="control-label" for="txtCidade">
                        @Html.DisplayNameFor(model => model.Cidade)
                    </label>
                    @Html.TextBoxFor(Model => Model.Cidade, "", new { @class = "form-control", @id = "txtCidade", @maxlenght = "60", @type = "text" })
                </div>
            </div>

            <div class="col-md-2">
                <div class="form-group">
                    <label class="control-label" for="txtUf">
                        @Html.DisplayNameFor(model => model.Uf)
                    </label>
                    @Html.TextBoxFor(Model => Model.Uf, "", new { @class = "form-control", @id = "txtUf", @maxlenght = "2", @type = "text" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label" for="txtEmail">
                        @Html.DisplayNameFor(model => model.Email)
                    </label>
                    @Html.TextBoxFor(Model => Model.Email, "", new { @class = "form-control", @id = "txtEmail", @maxlenght = "75", @type = "email" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label" for="txtTelefone">
                        @Html.DisplayNameFor(model => model.Telefone)
                    </label>
                    @Html.TextBoxFor(Model => Model.Telefone, "", new { @class = "form-control", @id = "txtTelefone", @maxlenght = "30", @type = "text" })
                </div>
            </div>
        </div>
    }
</div>

@*https://igorescobar.github.io/jQuery-Mask-Plugin/docs.html*@
@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('#txtCep').mask('00000-000');

            $('#txtCnpj').mask('00.000.000/0000-00');

            $('#txtDataFundacao').mask('00/00/0000');

            //  Controle para redirecionar a página se o ViewBag de Mensagem de Sucesso estiver preenchido.
            var msg = '@ViewBag.SuccessMessage';

            if (msg !== '') {
                setTimeout(function () {
                    window.location.replace(
                        '@Url.Action(
                            "Index",
                            "Empregador")')
                }, 4000);
            }
        });
    </script>
}